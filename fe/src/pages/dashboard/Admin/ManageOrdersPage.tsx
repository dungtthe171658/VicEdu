// src/pages/dashboard/Admin/ManageOrdersPage.tsx
import { useState, useEffect } from "react";
import orderApi from "../../../api/orderApi";
import type { OrderDto } from "../../../types/order";
import "./ManageOrdersPage.css";

const ManageOrdersPage = () => {
  const [orders, setOrders] = useState<OrderDto[]>([]);
  const [loading, setLoading] = useState(true);

  // ‚úÖ T·∫£i danh s√°ch ƒë∆°n h√†ng
  const loadOrders = async () => {
  try {
    setLoading(true);
    const data = await orderApi.getAll();
    console.log("üì¶ Orders from API:", data); // <--- th√™m d√≤ng n√†y
    setOrders(data);
  } catch (error) {
    console.error("Error loading orders:", error);
    alert("Kh√¥ng th·ªÉ t·∫£i danh s√°ch ƒë∆°n h√†ng!");
  } finally {
    setLoading(false);
  }
};

  useEffect(() => {
    loadOrders();
  }, []);

  // ‚úÖ X√≥a ƒë∆°n h√†ng
  const handleDelete = async (id: string) => {
    if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ƒë∆°n h√†ng n√†y?")) {
      try {
        await orderApi.delete(id);
        loadOrders();
      } catch (error) {
        console.error("Error deleting order:", error);
        alert("Kh√¥ng th·ªÉ x√≥a ƒë∆°n h√†ng!");
      }
    }
  };

  // ‚úÖ Hi·ªÉn th·ªã m√†u tr·∫°ng th√°i
  const getStatusColor = (status: string) => {
    switch (status) {
      case "completed":
        return "green";
      case "pending":
        return "orange";
      case "cancelled":
        return "gray";
      case "failed":
        return "red";
      default:
        return "black";
    }
  };

  return (
    <div className="order-management-container">
      <div className="header">
        <h2>Qu·∫£n l√Ω ƒë∆°n h√†ng</h2>
        <button className="refresh-btn" onClick={loadOrders}>
          L√†m m·ªõi
        </button>
      </div>

      {loading ? (
        <p>ƒêang t·∫£i danh s√°ch ƒë∆°n h√†ng...</p>
      ) : orders.length === 0 ? (
        <p>Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</p>
      ) : (
        <table className="order-table">
          <thead>
            <tr>
              <th>M√£ ƒë∆°n</th>
              <th>Ng∆∞·ªùi d√πng</th>
              <th>Tr·∫°ng th√°i</th>
              <th>T·ªïng ti·ªÅn</th>
              <th>Ng√†y t·∫°o</th>
              <th>Ph∆∞∆°ng th·ª©c thanh to√°n</th>
              <th>Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            {orders.map((order) => (
              <tr key={order._id}>
                <td>{order._id}</td>
                <td>{typeof order.user_id === "object" ? order.user_id?.name : order.user_id}</td>
                <td style={{ color: getStatusColor(order.status) }}>
                  {order.status}
                </td>
                <td>
                  {order.total_amount.toLocaleString("vi-VN")} ‚Ç´
                </td>
                <td>
                  {order.created_at
                    ? new Date(order.created_at).toLocaleString("vi-VN")
                    : "‚Äî"}
                </td>
                <td>{order.payment_method || "Kh√¥ng r√µ"}</td>
                <td>
                  <button
                    className="delete-btn"
                    onClick={() => handleDelete(order._id)}
                  >
                    X√≥a
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
};

export default ManageOrdersPage;
